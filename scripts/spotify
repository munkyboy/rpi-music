#!/usr/bin/env bash
set -eo pipefail

chmod a+x /usr/local/bin/librespot

apt-get update && apt-get install -yq libavahi-compat-libdnssd-dev

cat <<-'EOF' > /etc/systemd/system/spotify.service
[Unit]
Description=A spotify playing daemon
Documentation=https://github.com/librespot-org/librespot
Wants=sound.target network-online.target
After=sound.target network-online.target

[Service]
ExecStart=/usr/local/bin/librespot \
          --name multizone \
          --device-type avr \
          --bitrate 320 \
          --initial-volume 100 \
          --volume-ctrl fixed \
          --enable-volume-normalisation \
          --normalisation-pregain 3 \
          --autoplay \
          --onevent /usr/local/bin/spotify-event-handler
Restart=always
RestartSec=2

[Install]
WantedBy=default.target
EOF
systemctl enable spotify.service

# control the amp on spotify events
# list of events: https://github.com/librespot-org/librespot/blob/v0.1.6/src/player_event_handler.rs
cat <<-'EOF' > /usr/local/bin/spotify-event-handler
#!/usr/bin/env bash
set -eo pipefail

echo "$PLAYER_EVENT" > /var/log/spotify-last-event.log
case $PLAYER_EVENT in
  start|playing|change)
    /usr/local/bin/amp on
    ;;
  stop)
    /usr/local/bin/amp off
    ;;
esac
EOF
chmod a+x /usr/local/bin/spotify-event-handler

# turn off amp after 15 min of idle time
cat <<-'EOF' > /usr/local/bin/amp-sleep
#!/usr/bin/env bash
set -eo pipefail

if [ /var/log/spotify-last-event.log -nt /var/log/amp-sleep.log ] ; then
  if grep -q '^paused$' /var/log/spotify-last-event.log; then
    age=$(expr $(date +%s) - $(date -r /var/log/spotify-last-event.log +%s))
    if [ $age -gt 900 ] ; then
      echo "turning amp off"
      /usr/local/bin/amp off
      touch /var/log/amp-sleep.log
    fi
  fi
fi
EOF
chmod a+x /usr/local/bin/amp-sleep

cat <<-'EOF' > /etc/systemd/system/amp-sleep.service
[Unit]
Description=Check if amp should sleep
Wants=amp-sleep.timer

[Service]
Type=oneshot
ExecStart=/usr/local/bin/amp-sleep

[Install]
WantedBy=default.target
EOF

cat <<-'EOF' > /etc/systemd/system/amp-sleep.timer
[Unit]
Description=Check if amp should sleep
Requires=amp-sleep.service

[Timer]
OnCalendar=minutely

[Install]
WantedBy=timers.target
EOF

systemctl enable amp-sleep.service
systemctl enable amp-sleep.timer

# Sometimes Spotify on iOS is not able to discover the spotify connect service.
# Attempt to resolve this by querying for mdns and restarting the spotify
# service if we do not see this host.
chmod a+x /usr/local/bin/resolv

cat <<-'EOF' > /usr/local/bin/spotify-monitor
#!/usr/bin/env bash

if ! /usr/local/bin/resolv -service _spotify-connect._tcp -wait 2 2>&1 | grep -q multizone ; then
  echo "multizone not responding to mdns" >&2
  # systemctl restart spotify
fi
EOF
chmod a+x /usr/local/bin/spotify-monitor

cat <<-'EOF' > /etc/systemd/system/spotify-monitor.service
[Unit]
Description=Monitor spotify service
Wants=spotify-monitor.timer
Requires=spotify.service
After=spotify.service

[Service]
Type=oneshot
ExecStart=/usr/local/bin/spotify-monitor

[Install]
WantedBy=default.target
EOF

cat <<-'EOF' > /etc/systemd/system/spotify-monitor.timer
[Unit]
Description=Monitor spotify service
Requires=spotify-monitor.service

[Timer]
OnCalendar=*:0/5

[Install]
WantedBy=timers.target
EOF

systemctl enable spotify-monitor.service
systemctl enable spotify-monitor.timer
