#!/usr/bin/env bash
set -eo pipefail

# script to control turning amp on and off
cat <<-'EOF' > /usr/local/bin/amp
#!/usr/bin/env bash
set -eo pipefail

GPIO=23

if [ ! -d /sys/class/gpio/gpio${GPIO} ] ; then
  echo "$GPIO" > /sys/class/gpio/export
  echo "out" > /sys/class/gpio/gpio${GPIO}/direction
fi

case "$1" in
  "on")
    if grep -q '^0$' /sys/class/gpio/gpio${GPIO}/value ; then
      echo "1" > /sys/class/gpio/gpio${GPIO}/value
      sleep 2
      # TODO: remove this when we can control speakers
      echo -e "<11PR01\r<12PR01\r<11VO10\r<12VO10\r" > /dev/ttyUSB0
    fi
  ;;
  "off")
    echo "0" > /sys/class/gpio/gpio${GPIO}/value
  ;;
  *)
    echo "unknown option. expecting exactly one argument of 'on' or 'off'" >&2
    exit 1
  ;;
esac
EOF
chmod a+x /usr/local/bin/amp

# allow serial port via access via WebSocket
curl -fLs "https://github.com/chilipeppr/serial-port-json-server/releases/download/v1.96/serial-port-json-server-1.96_linux_arm.tar.gz" | \
tar -C /usr/local/bin --strip-components 1 -xzvf - serial-port-json-server-1.96_linux_arm/serial-port-json-server

cat <<-'EOF' > /etc/systemd/system/amp.service
[Unit]
Description=Expose amp Serial control over WebSocket
Documentation=https://github.com/chilipeppr/serial-port-json-server
Wants=network-online.target
After=network-online.target

[Service]
ExecStart=/usr/local/bin/serial-port-json-server --regex USB0
Restart=always
RestartSec=2

[Install]
WantedBy=default.target
EOF

systemctl enable amp.service
